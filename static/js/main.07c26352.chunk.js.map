{"version":3,"sources":["components/header/header-logo.svg","redux/actions/calendar-actions.js","components/header/header.js","utils/utils.js","components/calendar/week/day/day.js","components/calendar/week/week.js","components/calendar/calendar.js","components/modal/modal.js","components/app.js","redux/reducers/calendar-reducer.js","redux/reducers/index.js","index.js","redux/store/index.js"],"names":["module","exports","setMonth","number","type","payload","setMainPage","string","setModal","boolean","Header","dispatch","useDispatch","className","src","logo","alt","href","onClick","utils","checkDays","daysInMonth","indexDayInTable","weekCounter","firstDayNumber","getTargetDay","props","dayIndex","daysState","month","filter","day","Day","today","useSelector","state","year","numberDay","toLocaleString","length","todayStyle","Date","getMonth","id","Math","random","key","Week","days","dayNames","map","dayName","index","Calendar","monthNames","getDate","getDay","console","log","daysWithComments","toLocaleUpperCase","mappingEl","week","ceil","push","component","createWeek","slice","ModalExample","useState","body","setBody","modal","selectedDay","closeModal","Modal","isOpen","ModalHeader","toggle","ModalBody","Input","onChange","event","target","value","ModalFooter","Button","color","saveDay","date","alert","App","page","now","initialState","getFullYear","rootReducer","action","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.07c26352.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header-logo.b1a38376.svg\";","export const setMonth = (number) => {\r\n    return {\r\n        type: \"SET_MONTH\",\r\n        payload: number\r\n    }\r\n};\r\n\r\nexport const setMainPage = (string)=> {\r\n    return {\r\n        type: \"SET_MAIN_PAGE\",\r\n        payload: string\r\n    }\r\n} ;\r\n\r\nexport const setModal = (boolean) => {\r\n    return {\r\n        type: \"SET_MODAL\",\r\n        payload: boolean\r\n    }\r\n};\r\n\r\nexport const setSelectedDay = (day)=>{\r\n    return {\r\n        type: 'SET_SELECTED_DAY',\r\n        payload: day\r\n    }\r\n};\r\n\r\nexport const saveDay = (day) => {\r\n    return {\r\n        type: \"SAVE_DAY\",\r\n        payload: day\r\n    }\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport './header.scss';\r\nimport logo from './header-logo.svg';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setMainPage } from '../../redux/actions/calendar-actions';\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const setPathToAbout =()=>{\r\n        dispatch(setMainPage('about'))\r\n    };\r\n    const setPathToHome =()=>{\r\n        dispatch(setMainPage('home'))\r\n    };\r\n\r\n    return (<header className=\"App-header\">\r\n                <img\r\n                    src={logo}\r\n                    alt=\"logo\"\r\n                    className=\"header-logo\"\r\n                />\r\n\r\n                <nav className=\"header-nav\">\r\n                    <a href=\"#\"\r\n                       onClick={setPathToHome}\r\n                    >\r\n                        <span>Home</span>\r\n                    </a>\r\n                    <a href=\"#\"\r\n                       onClick={setPathToAbout}\r\n                    >\r\n                        <span>About Us</span>\r\n                    </a>\r\n                </nav>\r\n            </header>\r\n    );\r\n};\r\n\r\nexport default Header;","const utils = {\r\n    checkDays,\r\n    getTargetDay\r\n};\r\n\r\nfunction getTargetDay(props) {\r\n    const {dayIndex, daysState, month} = props,\r\n        targetDay = daysState.filter((day) => (day['month'] === month) && (day['id'] === dayIndex));\r\n    return targetDay[0];\r\n}\r\n\r\nfunction checkDays(daysInMonth, indexDayInTable, weekCounter, firstDayNumber) {\r\n    if (indexDayInTable > daysInMonth + firstDayNumber - 1) {\r\n        return null;\r\n    }\r\n    if (weekCounter === 0 && indexDayInTable === firstDayNumber) {\r\n        return indexDayInTable - firstDayNumber + 1;\r\n    }\r\n\r\n    if (weekCounter === 0 && indexDayInTable > firstDayNumber) {\r\n        return indexDayInTable - firstDayNumber + 1;\r\n    }\r\n    if (weekCounter !== 0) {\r\n        indexDayInTable++;\r\n        return indexDayInTable - firstDayNumber;\r\n    }\r\n}\r\n\r\nexport default utils;","import React from 'react';\r\nimport utils from '../../../../utils/utils';\r\nimport {useDispatch, useSelector } from \"react-redux\";\r\nimport {setModal, setSelectedDay} from '../../../../redux/actions/calendar-actions';\r\n\r\nconst Day = (props) => {\r\n\r\n   const today = useSelector(state => state.today);\r\n   const month = useSelector(state => state.month);\r\n   const year = useSelector(state => state.year);\r\n   const dispatch = useDispatch();\r\n\r\n   const {\r\n        indexDayInTable,\r\n        weekCounter,\r\n        daysInMonth,\r\n        firstDayNumber\r\n    } = props;\r\n\r\n    let numberDay = utils.checkDays(daysInMonth, indexDayInTable, weekCounter, firstDayNumber );\r\n\r\n    if(numberDay && numberDay.toLocaleString().length<2){\r\n        numberDay = `0${numberDay}`;\r\n    }\r\n\r\n    const openModal = ()=>{\r\n        dispatch(setModal(true));\r\n        dispatch(setSelectedDay(new Date(year, month, numberDay)));\r\n    };\r\n\r\n    const todayStyle = numberDay === today && month === new Date().getMonth() ? 'today': null;\r\n\r\n    return (\r\n        <td id={Math.random()}\r\n            key={indexDayInTable}\r\n            className={todayStyle}\r\n            onClick={openModal}\r\n         >\r\n            {numberDay}\r\n         </td>\r\n    )\r\n};\r\n\r\nexport default Day;","import React from 'react';\r\nimport {useSelector } from \"react-redux\";\r\nimport Day from './day/day';\r\n\r\nconst Week = (props) => {\r\n    const state = useSelector(state => state);\r\n\r\n    const {\r\n        weekCounter,\r\n        daysInMonth,\r\n        firstDayNumber\r\n    } = props;\r\n\r\n    const days = state.dayNames.map((dayName, index) => {\r\n        return <Day indexDayInTable={(index + 1) + (weekCounter * 7)}\r\n                    key={(index + 1) + (weekCounter * 7)}\r\n                    weekCounter={weekCounter}\r\n                    daysInMonth={daysInMonth}\r\n                    firstDayNumber={firstDayNumber}\r\n        />\r\n    });\r\n\r\n    return (\r\n        <tr>\r\n            {days}\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default Week;","import React from 'react';\r\nimport {useDispatch, useSelector } from \"react-redux\";\r\nimport { setMonth } from '../../redux/actions/calendar-actions';\r\nimport './calendar.scss';\r\nimport Week from \"./week/week\";\r\n\r\nconst Calendar = () => {\r\n\r\n    const state = useSelector(state => state);\r\n    const dispatch = useDispatch();\r\n    const {year, month, dayNames, monthNames} = state;\r\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\r\n    let firstDayNumber = new Date(year, month, 1).getDay();\r\n\r\n    const nextMonth =()=>{\r\n        if(month>=11) {\r\n            return\r\n        }\r\n        dispatch(setMonth(1));\r\n    };\r\n\r\n    const prevMonth =()=>{\r\n        if(month<=1) {\r\n            return\r\n        }\r\n        dispatch(setMonth(-1));\r\n    };\r\n\r\n    console.log(state.daysWithComments);\r\n    const createWeek = ()=>{\r\n\r\n        const mappingEl = [];\r\n        let weekCounter = 0;\r\n        let week = Math.ceil(daysInMonth / 7);\r\n\r\n        if (firstDayNumber === 0) {\r\n            firstDayNumber = 7;\r\n        }\r\n\r\n        if ((firstDayNumber > 6 && daysInMonth >= 30) || (firstDayNumber > 3 && month === 1)) {\r\n            week++;\r\n        }\r\n\r\n        while (week !== weekCounter) {\r\n            mappingEl.push(<Week\r\n                key={Math.random()}\r\n                weekCounter={weekCounter}\r\n                daysInMonth={daysInMonth}\r\n                firstDayNumber={firstDayNumber}\r\n            />\r\n           );\r\n            weekCounter++;\r\n        }\r\n        return mappingEl.map(component => component);\r\n    };\r\n\r\n    return (\r\n        <div className=\"calendar\">\r\n            <div className=\"calendar-content\">\r\n\r\n                <div className=\"calendar-header\">\r\n                    <div\r\n                        className=\"prev\"\r\n                        onClick={prevMonth}\r\n                    > {'<'}\r\n\r\n                    </div>\r\n\r\n                            {`${monthNames[month].toLocaleUpperCase()} ${year}`}\r\n                    <div\r\n                        className=\"next\"\r\n                        onClick={nextMonth}\r\n                    >\r\n                        {'>'}\r\n                    </div>\r\n                </div>\r\n\r\n                <table className={\"calendar-board\"}>\r\n                    <tbody>\r\n                    {createWeek()}\r\n                    <tr>\r\n                        {dayNames.map((dayName, index) => <th key={index}>{dayName.slice(0, 3)}</th>)}\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Calendar;\r\n","import React, { useState } from 'react';\r\nimport {useDispatch, useSelector } from \"react-redux\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input } from 'reactstrap';\r\nimport {saveDay, setModal} from '../../redux/actions/calendar-actions';\r\n\r\nconst ModalExample = () => {\r\n\r\n    const [body, setBody] = useState(null);\r\n    const state = useSelector(state=>state);\r\n    const {modal, selectedDay, dayNames, monthNames, year} = state;\r\n    const dispatch = useDispatch();\r\n\r\n    const saveData = () => {\r\n        if(body){\r\n            const day = {\r\n                date: selectedDay,\r\n                body\r\n            };\r\n            dispatch(saveDay(day));\r\n        }else {\r\n            alert(\"To save something, you must first type something\")\r\n        }\r\n\r\n    };\r\n\r\n    const setText = (event) => {\r\n        setBody(event.target.value);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        dispatch(setModal(false));\r\n    };\r\n\r\n    const getFullDateString = () => {\r\n        return `${dayNames[selectedDay.getDay()-1<0?6:selectedDay.getDay()-1]} - ${selectedDay.getDate()}, ${monthNames[selectedDay.getMonth()]}, ${year}`\r\n    };\r\n\r\n    return (\r\n            <Modal isOpen={modal} >\r\n                <ModalHeader toggle={closeModal}>{selectedDay&&getFullDateString()}</ModalHeader>\r\n                <ModalBody>\r\n                    <Input\r\n                        onChange={setText}\r\n                    />\r\n                    <br />\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={saveData}>Save</Button>{' '}\r\n                    <Button color=\"secondary\" onClick={closeModal}>Cancel</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n    );\r\n};\r\n\r\nexport default ModalExample;","import React from 'react';\nimport Header from './header/header';\nimport Calendar from './calendar/calendar'\nimport { useSelector } from \"react-redux\";\nimport ModalExample from './modal/modal';\nimport './app.scss';\n\nconst App = () => {\n  const page = useSelector(state=>state.page);\n  return (\n      <div className=\"App\">\n        <Header/>\n        <main>\n           {\n                page === 'about'? <div className=\"about\">\n                    <h2>Lorem ipsum dolor sit amet.</h2>\n                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolor dolorum explicabo iure iusto neque repellendus sit.</p>\n                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. A accusamus architecto cum debitis dolores eaque eum iusto labore necessitatibus nihil numquam, placeat rem, repellendus, rerum tempora ullam unde voluptas voluptatem?</p>\n                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ab adipisci, atque autem commodi cumque debitis expedita facere id, in incidunt ipsam labore laudantium libero maiores minus modi nostrum numquam optio pariatur praesentium quam recusandae repellendus repudiandae rerum sit tenetur ullam velit veritatis vitae voluptates. Ducimus error magni mollitia quae voluptatem?</p>\n                </div>: null\n           }\n        <ModalExample/>\n            {\n                page === 'home'? <div className=\"content\">\n                        <div className=\"content-left\">\n                            <div className=\"content-left-text\">\n                    <span>\n                        Choose the day <br/>\n                        for the meeting\n                    </span>\n                                <span>\n                        We encourage you to book your <br/>\n                        appointment online. <br/>\n                        This save your time.\n                    </span>\n                            </div>\n                        </div>\n                        <Calendar/>\n                    </div>\n                    : null\n            }\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","const now = new Date();\r\n\r\nconst initialState = {\r\n    dayNames: [\r\n        'Monday',\r\n        'Tuesday',\r\n        'Wednesday',\r\n        'Thursday',\r\n        'Friday',\r\n        'Saturday',\r\n        'Sunday',\r\n    ],\r\n    monthNames: [\r\n        \"January\",\r\n        \"February\",\r\n        \"March\",\r\n        \"April\",\r\n        \"May\",\r\n        \"June\",\r\n        \"July\",\r\n        \"August\",\r\n        \"September\",\r\n        \"October\",\r\n        \"November\",\r\n        \"December\"\r\n    ],\r\n    daysWithComments: [],\r\n    year: now.getFullYear(),\r\n    month: now.getMonth(),\r\n    today: now.getDate(),\r\n    modal: false,\r\n    selectedDay : null,\r\n    page: \"home\"\r\n};\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_MONTH':\r\n            return {...state, month: state.month + action.payload};\r\n        case 'SET_MODAL':\r\n            return {...state, modal: action.payload};\r\n        case 'SET_SELECTED_DAY':\r\n            return {...state, selectedDay: action.payload};\r\n        case 'SAVE_DAY':\r\n            return {...state, daysWithComments: [...state.daysWithComments, action.payload]};\r\n        case 'SET_MAIN_PAGE':\r\n            return {...state, page: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { reducer } from './calendar-reducer';\r\n\r\nexport const rootReducer = reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport { Provider } from 'react-redux'\nimport configureStore from './redux/store';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst store = configureStore();\n\nReactDOM.render(\n <Provider store={store}>\n        <App />\n </Provider>,\n  document.getElementById('root')\n);\n","import { rootReducer } from '../reducers';\r\nimport { createStore} from 'redux';\r\n\r\nexport default function configureStore() {\r\n    return createStore(\r\n        rootReducer,\r\n       );\r\n}"],"sourceRoot":""}